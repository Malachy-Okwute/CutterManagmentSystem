<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--  window control button style  -->
    <Style x:Key="WindowControlButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="45" />
        <Setter Property="FontSize" Value="{StaticResource XSmall}" />
        <Setter Property="FontFamily" Value="{StaticResource LightIcon}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush6}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush1}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border UseLayoutRounding="True"
                            Background="{TemplateBinding Background}"
                            TextBlock.Foreground="{TemplateBinding Foreground}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <!--  content  -->
                        <ContentPresenter x:Name="ControlContent" HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush3}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  maximize button style  -->
    <Style x:Key="WindowMaximizeButtonControl"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource WindowControlButtonStyle}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border UseLayoutRounding="True"
                            Background="{TemplateBinding Background}"
                            TextBlock.Foreground="{TemplateBinding Foreground}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <!--  content  -->
                        <ContentPresenter x:Name="ControlContent" HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}"
                                          RenderTransformOrigin="0.5, 0.5">

                            <!--  rotates content of this button by 180deg  -->
                            <ContentPresenter.RenderTransform>
                                <RotateTransform Angle="180" />
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush3}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsMaximized, UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter TargetName="ControlContent" Property="Content" Value="{StaticResource WindowRestoreIcon}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  app button style  -->
    <Style x:Key="TransparentButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="100" />
        <Setter Property="FontSize" Value="{StaticResource Regular}" />
        <Setter Property="FontFamily" Value="{StaticResource RegularIcon}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush3}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <Grid UseLayoutRounding="True" Background="{TemplateBinding Background}">

                            <Grid Name="MouseOverBackground" Background="Transparent" />

                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}" />

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverBackground" Property="Background" Value="{DynamicResource ButtonHoverBackgroundColorBrush1}" />
                            <Setter TargetName="MouseOverBackground" Property="Opacity" Value="0.1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush3}" />
                            <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush2}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource AccentColorBrush6}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--  machine edit button style  -->
    <Style x:Key="MachineItemEditButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource TransparentButtonStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid UseLayoutRounding="True" Background="{TemplateBinding Background}">

                        <Grid Name="MouseOverBackground" Background="Transparent" />

                        <ContentPresenter Name="Content"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Visibility="Collapsed"
                                          Content="{TemplateBinding Content}" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Content" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  current shift profile button  -->
    <Style x:Key="CurrentShiftStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColorBrush3}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="{StaticResource Small}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush3}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border UseLayoutRounding="True"
                            Background="{TemplateBinding Background}"
                            TextBlock.Foreground="{TemplateBinding Foreground}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="20"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <!--  content  -->
                        <ContentPresenter x:Name="ControlContent"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush3}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  notification button  -->
    <Style x:Key="NotificationButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource Regular}" />
        <Setter Property="FontFamily" Value="{StaticResource RegularIcon}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush3}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid UseLayoutRounding="True" Background="{TemplateBinding Background}">

                        <Grid Name="MouseOverBackground" Background="Transparent" />

                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverBackground" Property="Background" Value="{DynamicResource ButtonHoverBackgroundColorBrush1}" />
                            <Setter TargetName="MouseOverBackground" Property="Opacity" Value="0.1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--  machine popup button  -->
    <Style x:Key="MachineOptionsPopupStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush1}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush3}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColorBrush1}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="{StaticResource XSmall}" />
        <Setter Property="Height" Value="34" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="6,4"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush3}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush2}" />
                            <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TransparentButtonWithTextStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush3}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColorBrush6}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="{StaticResource Small}" />
        <Setter Property="FontFamily" Value="{StaticResource RegularIcon}" />
        <Setter Property="FontWeight" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>

                            <Grid Name="MouseOverBackground" Background="Transparent" />

                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center"
                                        Orientation="Horizontal">


                                <ContentPresenter Margin="4" Content="{TemplateBinding Content}" />
                                <TextBlock Margin="4"
                                           Text="{TemplateBinding Tag}"
                                           FontWeight="{TemplateBinding FontWeight}"
                                           FontSize="{TemplateBinding FontSize}"
                                           FontFamily="{StaticResource RobotoFlexRegular}"
                                           Foreground="{TemplateBinding Foreground}" />
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverBackground" Property="Background" Value="{DynamicResource ButtonHoverBackgroundColorBrush1}" />
                            <Setter TargetName="MouseOverBackground" Property="Opacity" Value="0.1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush2}" />
                            <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>